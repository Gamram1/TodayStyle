<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberSetting">

	<!-- 비밀번호 검사 -->
	<select id="settingPwdCheck" parameterType="member" resultType="member">
		SELECT
			user_No as userNo,
			user_Id as userId,
			user_Pwd as userPwd,
			user_Name as userName,
			user_Email as userEmail,
			gender as gender,
			nickname as nickname,
			enroll_Date as enrollDate,
			roll as roll,
			end_YN as endYN
		FROM
			member
		WHERE
			user_Id = #{userId} and user_Pwd = #{userPwd} and end_yn='N'
	</select>

	<!-- 닉네임 중복 체크 -->
	<select id="nicknameCheck" resultType="member">
		SELECT
			user_No as userNo,
			user_Id as userId,
			user_Pwd as userPwd,
			user_Name as userName,
			user_Email as userEmail,
			gender as gender,
			nickname as nickname,
			enroll_Date as enrollDate,
			roll as roll,
			end_YN as endYN
		FROM
			member
		WHERE
			nickname = #{value}
	</select>
	<!-- 사용자 닉네임 매칭 확인 -->
	<select id="userNicknameCheck" parameterType="hashmap" resultType="member">
		SELECT
			user_No as userNo,
			user_Id as userId,
			user_Pwd as userPwd,
			user_Name as userName,
			user_Email as userEmail,
			gender as gender,
			nickname as nickname,
			enroll_Date as enrollDate,
			roll as roll,
			end_YN as endYN
		FROM
			member
		WHERE
			user_id = #{userId} AND nickname = #{nickname}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="pwdUpdate" parameterType="hashmap">
		UPDATE
			MEMBER
		SET
			user_pwd = #{newUserPwd}
		WHERE
			user_id = #{userId} AND user_pwd = #{userPwd}
	</update>

	<!-- 프로필 이미지 유무 확인 -->
	<select id="profileImgCheck" resultType="profileImg">
		SELECT
			user_id as userId,
			img_name as imgName,
			FILEPATH as filePath 
		FROM
			member_img
		WHERE
			user_id = #{userId}
	</select>
	
	<!-- 프로필 이미지 변경 -->
	<update id="updateProfileImg" parameterType="profileImg">
		MERGE INTO member_img
			USING DUAL ON (user_id = #{userId})
			WHEN MATCHED THEN
				UPDATE SET 
					img_name = #{imgName},
					FILEPATH = #{filePath}
			WHEN NOT MATCHED THEN
				INSERT(user_id, img_name, FILEPATH)
				VALUES(#{userId}, #{imgName}, #{filePath})
	</update>
	
	<!-- 프로필 이미지 기본으로 변경 -->
	<update id="updateProfiledDefaultImg" parameterType="hashmap">
		MERGE INTO member_img
			USING DUAL ON (user_id = #{userId})
			WHEN MATCHED THEN
				UPDATE SET 
					img_name = #{imgName},
					FILEPATH = #{filePath}
			WHEN NOT MATCHED THEN
				INSERT(user_id, img_name, FILEPATH)
				VALUES(#{userId}, #{imgName}, #{filePath})
	</update>
	
	<!-- 회원 정보 수정 (이메일o) -->
	<update id="memberUpdate" parameterType="member">
		UPDATE
			MEMBER
		SET
			user_Name = #{userName},
			nickname = #{nickname},
			user_Email = #{userEmail},
			gender = #{gender}
		WHERE
			user_id = #{userId}
	</update>
	
	<!-- 이메일 중복 확인 -->
	<select id="emailCheck" resultType="member">
		SELECT
			user_No as userNo,
			user_Id as userId,
			user_Pwd as userPwd,
			user_Name as userName,
			user_Email as userEmail,
			gender as gender,
			nickname as nickname,
			enroll_Date as enrollDate,
			roll as roll,
			end_YN as endYN
		FROM
			member
		WHERE
			user_Email = #{value}
	</select>
	
	<!-- 회원 정보 수정 (이메일x) -->
	<update id="memberUpdateNoMail" parameterType="member">
		UPDATE
			MEMBER
		SET
			user_Name = #{userName},
			nickname = #{nickname},
			gender = #{gender}
		WHERE
			user_id = #{userId}
	</update>
	
	<!-- 회원 탈퇴 정보 업데이트 -->
	<update id="memberWithdraw" parameterType="member">
		UPDATE
			MEMBER
		SET
			end_yn = 'Y'
		WHERE
			user_id = #{userId}
	</update>


</mapper>
